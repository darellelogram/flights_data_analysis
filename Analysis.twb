<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1208.1036                               -->
<workbook original-version='18.1' source-build='2020.3.4 (20203.20.1208.1036)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='tailNum_by_Utilization' inline='true' name='federated.1efxfr01va8ild12yzf6q02ldvgo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tailNum_by_Utilization' name='textscan.1444nbl1sy6u8y1362w3z18u0hhs'>
            <connection class='textscan' directory='C:/Users/darre/Documents/zzz Old files/NUS Y2S1/BT2102/Assignments/3/for Github/R_code' filename='tailNum_by_Utilization.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1444nbl1sy6u8y1362w3z18u0hhs' name='tailNum_by_Utilization.csv' table='[tailNum_by_Utilization#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='tail_num' ordinal='1' />
            <column datatype='integer' name='sum_airtime' ordinal='2' />
            <column datatype='integer' name='num_flights' ordinal='3' />
            <column datatype='string' name='airline' ordinal='4' />
            <column datatype='integer' name='total_delay' ordinal='5' />
            <column datatype='integer' name='n_delays' ordinal='6' />
            <column datatype='real' name='avg_airtime' ordinal='7' />
            <column datatype='real' name='avg_delay' ordinal='8' />
            <column datatype='real' name='pct_delay' ordinal='9' />
            <column datatype='boolean' name='Top25pct_AA' ordinal='10' />
            <column datatype='boolean' name='Top25pct_BA' ordinal='11' />
            <column datatype='boolean' name='Bottom25pct_AA' ordinal='12' />
            <column datatype='boolean' name='Bottom25pct_BA' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1444nbl1sy6u8y1362w3z18u0hhs' name='tailNum_by_Utilization.csv' table='[tailNum_by_Utilization#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='tail_num' ordinal='1' />
            <column datatype='integer' name='sum_airtime' ordinal='2' />
            <column datatype='integer' name='num_flights' ordinal='3' />
            <column datatype='string' name='airline' ordinal='4' />
            <column datatype='integer' name='total_delay' ordinal='5' />
            <column datatype='integer' name='n_delays' ordinal='6' />
            <column datatype='real' name='avg_airtime' ordinal='7' />
            <column datatype='real' name='avg_delay' ordinal='8' />
            <column datatype='real' name='pct_delay' ordinal='9' />
            <column datatype='boolean' name='Top25pct_AA' ordinal='10' />
            <column datatype='boolean' name='Top25pct_BA' ordinal='11' />
            <column datatype='boolean' name='Bottom25pct_AA' ordinal='12' />
            <column datatype='boolean' name='Bottom25pct_BA' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tailNum_by_Utilization.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[tailNum_by_Utilization.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tailNum_by_Utilization.csv_26B8C02215D44124BD840DE2F2B04F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tail_num</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tail_num]</local-name>
            <parent-name>[tailNum_by_Utilization.csv]</parent-name>
            <remote-alias>tail_num</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tailNum_by_Utilization.csv_26B8C02215D44124BD840DE2F2B04F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sum_airtime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sum_airtime]</local-name>
            <parent-name>[tailNum_by_Utilization.csv]</parent-name>
            <remote-alias>sum_airtime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tailNum_by_Utilization.csv_26B8C02215D44124BD840DE2F2B04F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_flights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_flights]</local-name>
            <parent-name>[tailNum_by_Utilization.csv]</parent-name>
            <remote-alias>num_flights</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tailNum_by_Utilization.csv_26B8C02215D44124BD840DE2F2B04F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airline]</local-name>
            <parent-name>[tailNum_by_Utilization.csv]</parent-name>
            <remote-alias>airline</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tailNum_by_Utilization.csv_26B8C02215D44124BD840DE2F2B04F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_delay]</local-name>
            <parent-name>[tailNum_by_Utilization.csv]</parent-name>
            <remote-alias>total_delay</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tailNum_by_Utilization.csv_26B8C02215D44124BD840DE2F2B04F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n_delays</remote-name>
            <remote-type>20</remote-type>
            <local-name>[n_delays]</local-name>
            <parent-name>[tailNum_by_Utilization.csv]</parent-name>
            <remote-alias>n_delays</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tailNum_by_Utilization.csv_26B8C02215D44124BD840DE2F2B04F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_airtime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_airtime]</local-name>
            <parent-name>[tailNum_by_Utilization.csv]</parent-name>
            <remote-alias>avg_airtime</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tailNum_by_Utilization.csv_26B8C02215D44124BD840DE2F2B04F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_delay]</local-name>
            <parent-name>[tailNum_by_Utilization.csv]</parent-name>
            <remote-alias>avg_delay</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tailNum_by_Utilization.csv_26B8C02215D44124BD840DE2F2B04F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pct_delay]</local-name>
            <parent-name>[tailNum_by_Utilization.csv]</parent-name>
            <remote-alias>pct_delay</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tailNum_by_Utilization.csv_26B8C02215D44124BD840DE2F2B04F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Top25pct_AA</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Top25pct_AA]</local-name>
            <parent-name>[tailNum_by_Utilization.csv]</parent-name>
            <remote-alias>Top25pct_AA</remote-alias>
            <ordinal>10</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tailNum_by_Utilization.csv_26B8C02215D44124BD840DE2F2B04F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Top25pct_BA</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Top25pct_BA]</local-name>
            <parent-name>[tailNum_by_Utilization.csv]</parent-name>
            <remote-alias>Top25pct_BA</remote-alias>
            <ordinal>11</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tailNum_by_Utilization.csv_26B8C02215D44124BD840DE2F2B04F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bottom25pct_AA</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Bottom25pct_AA]</local-name>
            <parent-name>[tailNum_by_Utilization.csv]</parent-name>
            <remote-alias>Bottom25pct_AA</remote-alias>
            <ordinal>12</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tailNum_by_Utilization.csv_26B8C02215D44124BD840DE2F2B04F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bottom25pct_BA</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Bottom25pct_BA]</local-name>
            <parent-name>[tailNum_by_Utilization.csv]</parent-name>
            <remote-alias>Bottom25pct_BA</remote-alias>
            <ordinal>13</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tailNum_by_Utilization.csv_26B8C02215D44124BD840DE2F2B04F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='tailNum_by_Utilization.csv' datatype='table' name='[__tableau_internal_object_id__].[tailNum_by_Utilization.csv_26B8C02215D44124BD840DE2F2B04F82]' role='measure' type='quantitative' />
      <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
      <column caption='Avg Airtime' datatype='real' name='[avg_airtime]' role='measure' type='quantitative' />
      <column caption='Num Flights' datatype='integer' name='[num_flights]' role='measure' type='quantitative' />
      <column caption='Sum Airtime' datatype='integer' name='[sum_airtime]' role='measure' type='quantitative' />
      <column caption='Tail Num' datatype='string' name='[tail_num]' role='dimension' type='nominal' />
      <group caption='AA Top 20' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='member' level='[airline]' member='&quot;AA&quot;' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[tail_num]' member='&quot;N105NN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N106NN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N108NN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N109NN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N110AN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N111ZM&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N112AN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N113AN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N115NN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N116AN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N117AN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N118NN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N123NN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N125AA&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N126AN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N128AN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N129AA&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N130AN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N131NN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N135NN&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='AA Bottom 10' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='member' level='[airline]' member='&quot;AA&quot;' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[tail_num]' member='&quot;N177XF&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N270AY&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N272AY&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N720AN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N727AN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N729AN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N735AT&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N736AT&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N803AL&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N822AN&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='BA Top 20' name='[Set 3]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='member' level='[airline]' member='&quot;BA&quot;' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[tail_num]' member='&quot;N535US&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N536US&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N537US&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N539US&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N540US&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N547US&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N581NW&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N583NW&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N584NW&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N585NW&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N586NW&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N587NW&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N588NW&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N589NW&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N590NW&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N591NW&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N593NW&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N594NW&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N595NW&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N928DU&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='BA Bottom 10' name='[Set 4]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='member' level='[airline]' member='&quot;BA&quot;' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[tail_num]' member='&quot;N1607B&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N1608&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N1611B&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N180DN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N701DN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N708DN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N710DN&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N806NW&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N808NW&quot;' />
            <groupfilter function='member' level='[tail_num]' member='&quot;N863DA&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='tailNum_by_Utilization.csv' id='tailNum_by_Utilization.csv_26B8C02215D44124BD840DE2F2B04F82'>
            <properties context=''>
              <relation connection='textscan.1444nbl1sy6u8y1362w3z18u0hhs' name='tailNum_by_Utilization.csv' table='[tailNum_by_Utilization#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='tail_num' ordinal='1' />
                  <column datatype='integer' name='sum_airtime' ordinal='2' />
                  <column datatype='integer' name='num_flights' ordinal='3' />
                  <column datatype='string' name='airline' ordinal='4' />
                  <column datatype='integer' name='total_delay' ordinal='5' />
                  <column datatype='integer' name='n_delays' ordinal='6' />
                  <column datatype='real' name='avg_airtime' ordinal='7' />
                  <column datatype='real' name='avg_delay' ordinal='8' />
                  <column datatype='real' name='pct_delay' ordinal='9' />
                  <column datatype='boolean' name='Top25pct_AA' ordinal='10' />
                  <column datatype='boolean' name='Top25pct_BA' ordinal='11' />
                  <column datatype='boolean' name='Bottom25pct_AA' ordinal='12' />
                  <column datatype='boolean' name='Bottom25pct_BA' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Avg Airtime (AA)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tailNum_by_Utilization' name='federated.1efxfr01va8ild12yzf6q02ldvgo' />
          </datasources>
          <datasource-dependencies datasource='federated.1efxfr01va8ild12yzf6q02ldvgo'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[avg_airtime]' derivation='Avg' name='[avg:avg_airtime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sum_airtime]' derivation='Avg' name='[avg:sum_airtime:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Airtime' datatype='real' name='[avg_airtime]' role='measure' type='quantitative' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column caption='Sum Airtime' datatype='integer' name='[sum_airtime]' role='measure' type='quantitative' />
            <column caption='Tail Num' datatype='string' name='[tail_num]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]'>
            <groupfilter function='member' level='[none:airline:nk]' member='&quot;AA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 2:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:sum_airtime:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:avg_airtime:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:avg_airtime:qk]</rows>
        <cols>([federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk] / ([federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 1:nk] / [federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 2:nk]))</cols>
      </table>
      <simple-id uuid='{8D9A3945-6EE4-4202-ABAA-E487C0D3D5B6}' />
    </worksheet>
    <worksheet name='Avg Airtime (BA)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tailNum_by_Utilization' name='federated.1efxfr01va8ild12yzf6q02ldvgo' />
          </datasources>
          <datasource-dependencies datasource='federated.1efxfr01va8ild12yzf6q02ldvgo'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[avg_airtime]' derivation='Avg' name='[avg:avg_airtime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sum_airtime]' derivation='Avg' name='[avg:sum_airtime:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Airtime' datatype='real' name='[avg_airtime]' role='measure' type='quantitative' />
            <column-instance column='[Set 3]' derivation='InOut' name='[io:Set 3:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 4]' derivation='InOut' name='[io:Set 4:nk]' pivot='key' type='nominal' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column caption='Sum Airtime' datatype='integer' name='[sum_airtime]' role='measure' type='quantitative' />
            <column caption='Tail Num' datatype='string' name='[tail_num]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]'>
            <groupfilter function='member' level='[none:airline:nk]' member='&quot;BA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 4:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:sum_airtime:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:avg_airtime:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:avg_airtime:qk]</rows>
        <cols>([federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk] / ([federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 3:nk] / [federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 4:nk]))</cols>
      </table>
      <simple-id uuid='{048671D3-DC64-4787-9C82-086C77695160}' />
    </worksheet>
    <worksheet name='Avg No. Flights (AA)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tailNum_by_Utilization' name='federated.1efxfr01va8ild12yzf6q02ldvgo' />
          </datasources>
          <datasource-dependencies datasource='federated.1efxfr01va8ild12yzf6q02ldvgo'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[num_flights]' derivation='Avg' name='[avg:num_flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sum_airtime]' derivation='Avg' name='[avg:sum_airtime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column caption='Num Flights' datatype='integer' name='[num_flights]' role='measure' type='quantitative' />
            <column caption='Sum Airtime' datatype='integer' name='[sum_airtime]' role='measure' type='quantitative' />
            <column caption='Tail Num' datatype='string' name='[tail_num]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]'>
            <groupfilter function='member' level='[none:airline:nk]' member='&quot;AA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 2:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:sum_airtime:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:num_flights:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:num_flights:qk]</rows>
        <cols>([federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk] / ([federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 1:nk] / [federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 2:nk]))</cols>
      </table>
      <simple-id uuid='{62A1E184-9F15-4F1B-9D17-35278EE78ACD}' />
    </worksheet>
    <worksheet name='Avg No. Flights (BA)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tailNum_by_Utilization' name='federated.1efxfr01va8ild12yzf6q02ldvgo' />
          </datasources>
          <datasource-dependencies datasource='federated.1efxfr01va8ild12yzf6q02ldvgo'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[num_flights]' derivation='Avg' name='[avg:num_flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sum_airtime]' derivation='Avg' name='[avg:sum_airtime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Set 3]' derivation='InOut' name='[io:Set 3:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 4]' derivation='InOut' name='[io:Set 4:nk]' pivot='key' type='nominal' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column caption='Num Flights' datatype='integer' name='[num_flights]' role='measure' type='quantitative' />
            <column caption='Sum Airtime' datatype='integer' name='[sum_airtime]' role='measure' type='quantitative' />
            <column caption='Tail Num' datatype='string' name='[tail_num]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]'>
            <groupfilter function='member' level='[none:airline:nk]' member='&quot;BA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 4:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:sum_airtime:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:num_flights:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:num_flights:qk]</rows>
        <cols>([federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk] / ([federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 3:nk] / [federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 4:nk]))</cols>
      </table>
      <simple-id uuid='{249B8595-7538-4A38-84D3-FB45211C3E6F}' />
    </worksheet>
    <worksheet name='Avg Total Airtime (AA)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tailNum_by_Utilization' name='federated.1efxfr01va8ild12yzf6q02ldvgo' />
          </datasources>
          <datasource-dependencies datasource='federated.1efxfr01va8ild12yzf6q02ldvgo'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[sum_airtime]' derivation='Avg' name='[avg:sum_airtime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column caption='Sum Airtime' datatype='integer' name='[sum_airtime]' role='measure' type='quantitative' />
            <column caption='Tail Num' datatype='string' name='[tail_num]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]'>
            <groupfilter function='member' level='[none:airline:nk]' member='&quot;AA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 2:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:sum_airtime:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:sum_airtime:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:sum_airtime:qk]</rows>
        <cols>([federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk] / ([federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 1:nk] / [federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 2:nk]))</cols>
      </table>
      <simple-id uuid='{989EA39D-62A5-4CD1-A718-3E10E1BC9120}' />
    </worksheet>
    <worksheet name='Avg Total Airtime (BA)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tailNum_by_Utilization' name='federated.1efxfr01va8ild12yzf6q02ldvgo' />
          </datasources>
          <datasource-dependencies datasource='federated.1efxfr01va8ild12yzf6q02ldvgo'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[sum_airtime]' derivation='Avg' name='[avg:sum_airtime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Set 3]' derivation='InOut' name='[io:Set 3:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 4]' derivation='InOut' name='[io:Set 4:nk]' pivot='key' type='nominal' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column caption='Sum Airtime' datatype='integer' name='[sum_airtime]' role='measure' type='quantitative' />
            <column caption='Tail Num' datatype='string' name='[tail_num]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]'>
            <groupfilter function='member' level='[none:airline:nk]' member='&quot;BA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 4:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:sum_airtime:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:sum_airtime:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:sum_airtime:qk]</rows>
        <cols>([federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk] / ([federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 3:nk] / [federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 4:nk]))</cols>
      </table>
      <simple-id uuid='{FACE448F-532C-4123-BC61-091551D95918}' />
    </worksheet>
    <worksheet name='Delay by Util (AA)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tailNum_by_Utilization' name='federated.1efxfr01va8ild12yzf6q02ldvgo' />
          </datasources>
          <datasource-dependencies datasource='federated.1efxfr01va8ild12yzf6q02ldvgo'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[avg_delay]' derivation='Avg' name='[avg:avg_delay:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[avg_delay]' role='measure' type='quantitative' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column caption='Tail Num' datatype='string' name='[tail_num]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:avg_delay:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:avg_delay:qk]</rows>
        <cols>([federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 1:nk] / [federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 2:nk])</cols>
      </table>
      <simple-id uuid='{F81C98AD-4427-42E4-80BB-3540A493A94E}' />
    </worksheet>
    <worksheet name='Delay by Util (BA)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tailNum_by_Utilization' name='federated.1efxfr01va8ild12yzf6q02ldvgo' />
          </datasources>
          <datasource-dependencies datasource='federated.1efxfr01va8ild12yzf6q02ldvgo'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[avg_delay]' derivation='Avg' name='[avg:avg_delay:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[avg_delay]' role='measure' type='quantitative' />
            <column-instance column='[Set 3]' derivation='InOut' name='[io:Set 3:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 4]' derivation='InOut' name='[io:Set 4:nk]' pivot='key' type='nominal' />
            <column caption='Tail Num' datatype='string' name='[tail_num]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:avg_delay:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:avg_delay:qk]</rows>
        <cols>([federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 3:nk] / [federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 4:nk])</cols>
      </table>
      <simple-id uuid='{FAEEAA1D-9F47-4886-BFD6-DF488985E126}' />
    </worksheet>
    <worksheet name='Delay by Util (Dimension)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tailNum_by_Utilization' name='federated.1efxfr01va8ild12yzf6q02ldvgo' />
          </datasources>
          <datasource-dependencies datasource='federated.1efxfr01va8ild12yzf6q02ldvgo'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column datatype='real' name='[avg_delay]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[avg_delay]' derivation='None' name='[none:avg_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sum_airtime]' derivation='None' name='[none:sum_airtime:qk]' pivot='key' type='quantitative' />
            <column caption='Sum Airtime' datatype='integer' name='[sum_airtime]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:avg_delay:qk]</rows>
        <cols>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:sum_airtime:qk]</cols>
      </table>
      <simple-id uuid='{2E7A47B9-AC0E-4EBF-AD45-EA2E29183829}' />
    </worksheet>
    <worksheet name='Delay by Util PCT (AA)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tailNum_by_Utilization' name='federated.1efxfr01va8ild12yzf6q02ldvgo' />
          </datasources>
          <datasource-dependencies datasource='federated.1efxfr01va8ild12yzf6q02ldvgo'>
            <column datatype='boolean' name='[Bottom25pct_AA]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[Top25pct_AA]' role='dimension' type='nominal' />
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[pct_delay]' derivation='Avg' name='[avg:pct_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bottom25pct_AA]' derivation='None' name='[none:Bottom25pct_AA:nk]' pivot='key' type='nominal' />
            <column-instance column='[Top25pct_AA]' derivation='None' name='[none:Top25pct_AA:nk]' pivot='key' type='nominal' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[pct_delay]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]'>
            <groupfilter function='member' level='[none:airline:nk]' member='&quot;AA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:pct_delay:qk]</rows>
        <cols>([federated.1efxfr01va8ild12yzf6q02ldvgo].[none:Top25pct_AA:nk] / [federated.1efxfr01va8ild12yzf6q02ldvgo].[none:Bottom25pct_AA:nk])</cols>
      </table>
      <simple-id uuid='{BCB99CAD-3A24-474E-A1E2-9760E8D1F22C}' />
    </worksheet>
    <worksheet name='Delay by Util PCT (BA)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tailNum_by_Utilization' name='federated.1efxfr01va8ild12yzf6q02ldvgo' />
          </datasources>
          <datasource-dependencies datasource='federated.1efxfr01va8ild12yzf6q02ldvgo'>
            <column datatype='boolean' name='[Bottom25pct_BA]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[Top25pct_BA]' role='dimension' type='nominal' />
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[pct_delay]' derivation='Avg' name='[avg:pct_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bottom25pct_BA]' derivation='None' name='[none:Bottom25pct_BA:nk]' pivot='key' type='nominal' />
            <column-instance column='[Top25pct_BA]' derivation='None' name='[none:Top25pct_BA:nk]' pivot='key' type='nominal' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[pct_delay]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]'>
            <groupfilter function='member' level='[none:airline:nk]' member='&quot;BA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:pct_delay:qk]</rows>
        <cols>([federated.1efxfr01va8ild12yzf6q02ldvgo].[none:Top25pct_BA:nk] / [federated.1efxfr01va8ild12yzf6q02ldvgo].[none:Bottom25pct_BA:nk])</cols>
      </table>
      <simple-id uuid='{626F8DDF-816F-4FDE-8825-A8E08FA01CD9}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='tailNum_by_Utilization' name='federated.1efxfr01va8ild12yzf6q02ldvgo' />
          </datasources>
          <datasource-dependencies datasource='federated.1efxfr01va8ild12yzf6q02ldvgo'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[sum_airtime]' derivation='Avg' name='[avg:sum_airtime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column caption='Sum Airtime' datatype='integer' name='[sum_airtime]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1efxfr01va8ild12yzf6q02ldvgo].[avg:sum_airtime:qk]</rows>
        <cols>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</cols>
      </table>
      <simple-id uuid='{45394EC2-F693-49D0-A1DB-EA8CD4B90F46}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9BE63504-7ADC-46C0-9307-7CD559799C7D}' />
    </window>
    <window class='worksheet' name='Avg Total Airtime (AA)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 1:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 2:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:tail_num:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE418973-427A-49B6-BCC3-F520C3EFD458}' />
    </window>
    <window class='worksheet' name='Avg Total Airtime (BA)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 1:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 3:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 4:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:Calculation_1008243405966729217:qk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:tail_num:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ABB372FE-1810-493A-BCCB-3C2EC91E76CE}' />
    </window>
    <window class='worksheet' name='Avg Airtime (AA)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 1:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 2:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:tail_num:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DCB0C4D0-8280-4184-B1D9-946D905233D9}' />
    </window>
    <window class='worksheet' name='Avg Airtime (BA)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 1:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 3:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 4:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:Calculation_1008243405966729217:qk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:tail_num:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5F7E7518-7AFB-4418-8C46-13606380650A}' />
    </window>
    <window class='worksheet' name='Avg No. Flights (AA)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 1:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 2:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:tail_num:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C63B757A-2C8F-4327-B9F9-5F1036B630AE}' />
    </window>
    <window class='worksheet' name='Avg No. Flights (BA)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 1:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 3:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 4:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:Calculation_1008243405966729217:qk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:tail_num:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B195037-E042-41EB-A264-3125480D9EE3}' />
    </window>
    <window class='worksheet' name='Delay by Util (Dimension)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:sum_airtime:qk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:total_delay:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A83D83B-0B2E-4A4B-8B93-94114E1F42B0}' />
    </window>
    <window class='worksheet' maximized='true' name='Delay by Util (AA)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 1:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 2:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C70744C9-DD93-428E-A7BC-1815F9FFC552}' />
    </window>
    <window class='worksheet' name='Delay by Util (BA)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 1:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 2:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 3:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[io:Set 4:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4CC24534-6A1D-4E7C-9B41-A764D2E6E621}' />
    </window>
    <window class='worksheet' name='Delay by Util PCT (AA)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:Bottom25pct_AA:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:Top25pct_AA:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F98AB232-47F7-40C7-AA81-E20C7DCBC45B}' />
    </window>
    <window class='worksheet' name='Delay by Util PCT (BA)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:Bottom25pct_BA:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:Top25pct_BA:nk]</field>
            <field>[federated.1efxfr01va8ild12yzf6q02ldvgo].[none:airline:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{401A316E-347E-4A35-B050-DCF88399977C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg Airtime (AA)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Airtime (BA)' width='192'>
      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
      Xs3/BxQtW9WxHc/ZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avg No. Flights (AA)' width='192'>
      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
      qiYCIKja/wdSFRxH2xjduwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avg No. Flights (BA)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Total Airtime (AA)' width='192'>
      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
      LAC9vb1s3bqV/fv3ExYWhkaj4ezZs8TFxbF27Vp0Oh2vvvoqx48fJyoqivr6enp7e3nssccI
      Dw/HYrGwceNGqqurCQ8Px2q1Ultbyw9/+EMMBoP4Uvw4U/3vAp2nKArHjx+nvLycxYsXo9Fo
      BrV7PB52795NV1cXeXl5yPLIM0eHw4FOp+P+++8nISEBjUZDfX09jz/+OCUlJfj6+nLo0CEe
      eughUlNTsVgs/PGPf+T5559n/fr1lJSUcPLkSR555BFiYmJwOBy89dZbbNy4kXvvvffLOBSq
      I64B6Jv6vPTSS9x5550EBwcPalMUherqarZs2cKaNWvw9R3pF/L7mEwmli9fTkpKCjqdDlmW
      8fX1RaPR4HK5qK6uJiwsjMTERGRZxmg0cvvtt1NYWEhLSwtWqxWdTkdAQACyLGMwGIiJiaGj
      owOPZ6QfJhculeoD4HK52LVrF+Hh4aSnp4/YvnPnTpKTk4mPj7+obff09LBhwwZCQkJIS0vD
      YDDQ1taGzWbrX8ZsNqPT6WhpaSEpKQmA7du343A4qKys5PXXX+fmm29Gr9eP9jTCJZiQUyBH
      11nefnEjFUHz+N5t8/HV901Jij/YwBtHu/HTfzZFybphLQtTjUAVWzeUMev+RYQBKG4sNYfZ
      vLOdhd9cTKR+5KxXV1eTn5/PunXrRhxkpaWlFBUV8f3vfx+dbmw1fTweD0ePHuUvf/kLgYGB
      PPLII/j7+5Oens6bb77Jn//8Z66//nrcbjfl5eU0NDTgcDgICQlh1apVPP/88zz77LPo9XqW
      LVtGbm4uHR0dF3sYhTGYeAFQbJw5uBdrcAYBXvYBFUkU2rodLLz9QeYmjjQNcdNrPb+8gr2r
      lo8/LSZuzi2jDn6n08nf//53srOzmTRp0rBphtVqZdOmTSxcuJCoqKhBr9yjcTgcfPDBB/zt
      b3/jpptuYsWKFf13gEJCQvjpT3/Kli1bePnll/Hx8SErK4vw8HBMJhOnTp3itdde484772Tu
      3Lm0trbywgsvsGnTJhYtWjTGAyhcjAkWAAVLdQF7W4OZP9WXj4sHvup109mhJc7/wndBFI+b
      8iMH6ApOZ35CwKjLVVZWsmnTJkwmE6+88gqKonDmzBl0Oh1HjhwhLy+PzZs3s3fvXp566inc
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Total Airtime (BA)' width='192'>
      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
      /was0lam/T1EAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Delay by Util (AA)' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Delay by Util (BA)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay by Util (Dimension)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay by Util PCT (AA)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay by Util PCT (BA)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
